/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.netbeans.modules.javasourcefilepalette.items.resources;

import com.sun.org.apache.bcel.internal.util.ClassPath;
import java.awt.Dialog;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.text.JTextComponent;
import org.netbeans.api.editor.EditorRegistry;
import org.netbeans.modules.javasourcefilepalette.items.NewExternalClass;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.openide.util.Exceptions;
import org.openide.util.NbBundle;
import java.util.Scanner; 
import org.netbeans.modules.editor.NbEditorUtilities;
import org.openide.filesystems.FileUtil;

/**
 *
 * @author Ian
 */
public class ExternalClassPopup extends javax.swing.JPanel {

    private Dialog dialog = null;
    private DialogDescriptor descriptor = null;
    private boolean dialogOK = false;
    NewExternalClass ifitem;
    JTextComponent target;

    /**
     * Creates new Popup form
     * @param item
     * @param target  
     */
    public ExternalClassPopup(NewExternalClass item, JTextComponent target) {
        this.ifitem = item;
        this.target = target;
        initComponents();

    }

    /**
     *
     * @return
     */
    public boolean showDialog() {
        addExternalClassButton.setVisible(false);
        dialogOK = false;

        String displayName = "";
        try {
            displayName = NbBundle.getBundle("org.netbeans.modules.javasourcefilepalette.items.resources.Bundle").getString("NAME_html-newClass");
        } catch (Exception e) {
        }

        descriptor = new DialogDescriptor(this, NbBundle.getMessage(NewObjectPopup.class, "LBL_Customizer_InsertPrefix") + " " + displayName, true,
                DialogDescriptor.OK_CANCEL_OPTION, DialogDescriptor.CANCEL_OPTION,
                new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        if (!descriptor.getValue().equals(DialogDescriptor.CANCEL_OPTION)) {
                            //evaluateInput();
                            dialogOK = true;

                            addExternalClassButton.doClick();
                        }
                        dialog.dispose();

                    }
                });

        dialog = DialogDisplayer.getDefault().createDialog(descriptor);

        dialog.setVisible(true);
        repaint();

        return dialogOK;

    }

//    private void evaluateInput() {
//
//        String comment = className.getText();
//        ifitem.setComment(comment);
//
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        className = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        addExternalClassButton = new javax.swing.JButton();
        createClass = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(lblName, org.openide.util.NbBundle.getMessage(ExternalClassPopup.class, "ExternalClassPopup.Name.text")); // NOI18N
        lblName.setName("Name"); // NOI18N

        className.setText(org.openide.util.NbBundle.getMessage(ExternalClassPopup.class, "ExternalClassPopup.text")); // NOI18N
        className.setName(""); // NOI18N
        className.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classNameActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox1, org.openide.util.NbBundle.getMessage(ExternalClassPopup.class, "ExternalClassPopup.jCheckBox1.text")); // NOI18N
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(addExternalClassButton, org.openide.util.NbBundle.getMessage(ExternalClassPopup.class, "ExternalClassPopup.addExternalClassButton.text")); // NOI18N
        addExternalClassButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addExternalClassButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(createClass, org.openide.util.NbBundle.getMessage(ExternalClassPopup.class, "ExternalClassPopup.createClass.text")); // NOI18N
        createClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createClassActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(className, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(createClass)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addExternalClassButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(className, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createClass)
                    .addComponent(addExternalClassButton)
                    .addComponent(jCheckBox1))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void classNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classNameActionPerformed
    
    
    static Scanner s = new Scanner(System.in);          
    

    private void addExternalClassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addExternalClassButtonActionPerformed
        // TODO add your handling code here:
//        try {
//            JTextComponent jtc = EditorRegistry.lastFocusedComponent();
//            CodeDrop codedrop = new CodeDrop();
//
//            String cName = className.getText();
//            String[] constructorParams = paramList.getText().toString().split(",");
//            String classMod = modCombo.getSelectedItem().toString();
//
//
//
//            //Make sure its a valid variable name...
//            CheckVariableName cvn = new CheckVariableName();
//            if (cvn.isGood(cName)) {
//                //If name is valid, add it to the editor.
//                System.out.println("Valid Name");
//
//                //Construct the output string
//                StringBuilder sb = new StringBuilder();
//                sb.append(classMod).append(" class ").append(cName).append("{\n\t//Fields go here \n\t");
//
//                //Add the class fields into the string
//
//                
//
//                //Add the constructor and params if any.
//                sb.append("\n\t//Class Constructor\n\t\t");
//                sb.append(classMod).append(" ").append(cName).append("(");
//
//                int count = 0;
//                for (String params : constructorParams) {
//                    if (count == constructorParams.length - 1) {
//                        sb.append(params).append(") {\n\t\t//Constructor Body Here\n\t\t}\n\t//Class Methods go here\n");
//                    } else {
//                        sb.append(params).append(", ");
//                    }
//                    count++;
//                }
//                
//                while(s.hasNextLine()){
//                    String line = s.nextLine().trim();
//                    ConstructorBuilder(line);
//                }
//
//                //Continue Building the String...
//                sb.append("\n\t}");
//
//                String code = sb.toString();
//                try {
//                    //Insert into document
//                    System.out.println("Inserting Code");
//                    CodeDrop.insert(code, jtc);
//                } catch (BadLocationException ex) {
//                    Exceptions.printStackTrace(ex);
//                }
//
//            }
//        } catch (java.lang.Throwable t) {
//
//            JOptionPane.showMessageDialog(this, "All Fields must be filled out.");
//
//        }
        
        
//        StringBuilder sb = new StringBuilder();
//
//        while (s.hasNextLine()){
//            String line = "";
//                
//            String[] constructorParams = line.split(",");
//            int count = 0;
//                for (String params : constructorParams) {
//                    if (count == constructorParams.length - 1) {
//                        sb.append(params).append(") {\n\t\t//Constructor Body Here\n\t\t}\n\t//Class Methods go here\n");
//                    } else {
//                        sb.append(params).append(", ");
//                    }     
//        
//                count++;
//                }
//        }
        
        
        
    }//GEN-LAST:event_addExternalClassButtonActionPerformed

    /*
    * method for creating button for creating a class file
    * @author Denival Heitz
    */
    private void createClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createClassActionPerformed
        // TODO add your handling code here:
        //Generates a file path for the user directory
        java.io.File pathFile =
        FileUtil.toFile(NbEditorUtilities.getFileObject(EditorRegistry.lastFocusedComponent().getDocument()));
        //String test = EditorRegistry.lastFocusedComponent().getDocument().getClass().getPackage()
        String t = EditorRegistry.lastFocusedComponent().getDocument().getRootElements().toString();
        try  {
            String path = pathFile.getCanonicalPath();
            //Pulls the package name
            //String pathPack = pathFile.getClass().getPackage().toString();
            
            
        
//            //Creates a copy of a default class and stores it in a String array
//            String[] cArray = new String[14];
//            cArray[0] = "*/\n";
//            cArray[1] = " * To change this template, choose Tools | Templates\n";
//            cArray[2] = " * and open the template in the editor.\n";
//            cArray[3] = " */\n";
//            cArray[4] = "package" + pathPack +"\n";
//            cArray[5] = "\n";
//            cArray[6] = "/**\n";
//            cArray[7] = " *\n";
//            cArray[8] = " * @author\n";
//            cArray[9] = " */\n";
//            cArray[10] = "public class {" + className +"\n";
//            cArray[11] = "\n";
//            cArray[12] = "}\n";
//            cArray[13] = "";
        
//        //Generates user directory
//        String title = className.getText();
//        String current = System.getProperty("user.dir");
//        String fCurrent = "";
//        
//        //Reformats user path for netbeans
//        for (int i = 0; i < current.length();i++)
//        {
//            fCurrent += current.charAt(i);
//            if (current.charAt(i) == '\\')
//            {
//                fCurrent += '\\';
//            }
//        }
        //Creates a FileWriter object and writes to it
        //File f = new File(current + pathPack + className + ".java");
        //System.out.println(current + pathPack + className + ".java");
            
//            File pFinder = new File(path);
//            FileReader fr = new FileReader(pFinder);
//            BufferedReader br = new BufferedReader(fr);
//            String lineRead = "";
//            
//            for(int i=0; i<=path.length(); i++)
//            {
//                lineRead = br.readLine();
//                if (lineRead.contains("package"))
//                {
//                    lineRead = lineRead.trim();
//                    lineRead = lineRead.replace("package", "");
//                    lineRead = lineRead.replace(";", "");
//                    lineRead = lineRead.trim();
//                }
//            }
            // reformats the user directory for netbeans
            String[] newPath = path.split("\\\\");
            newPath[newPath.length-1] = className.getText();
            newPath[newPath.length-1] += ".java";
            String finalPath = newPath.toString().replace(" ", "\\");
            String newFinalPath = "";
                       
            for(int i = 0; i < newPath.length; i++)
            {  
                newFinalPath += newPath[i];
                if (i < newPath.length - 1) {
                newFinalPath += "\\\\";
                                }
            }
            
            // creates the new Class file 
            File f = new File(newFinalPath);
            PrintWriter pw = new PrintWriter(f);
            pw.write("/*\n");
            pw.write(" * To change this template, choose Tools | Templates\n");
            pw.write(" * and open the template in the editor.\n");
            pw.write(" */\n");
            pw.write("package" + " enter package name" +"\n");
            pw.write("\n");
            pw.write("/**\n");
            pw.write(" *\n");
            pw.write(" * @author\n");
            pw.write(" */\n");
            pw.write("public class " +  (className.getText()) + "{\n");
            pw.write("\n");
            pw.write("}\n");
            pw.write("");
            pw.close();
        
//        FileWriter fw = new FileWriter(f);
//        BufferedWriter bw = new BufferedWriter(fw);
//        
//        for(int i=0; i<=cArray.length; i++)
//        {
//            try {
//                bw.write(cArray[i]);
//            } catch (IOException ex) {
//                Exceptions.printStackTrace(ex);
//            }
//        }
//            System.out.println(finalPath);
//        fw.close();
//        bw.close();
        }
        catch (Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_createClassActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addExternalClassButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField className;
    private javax.swing.JButton createClass;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblName;
    // End of variables declaration//GEN-END:variables
}
